name: Download ARM64 Python Wheels

on:
  workflow_dispatch:  # ÂÖÅËÆ∏ÊâãÂä®Ëß¶Âèë
  push:
    branches: [ main, master ]
    paths: [ 'requirements.txt' ]  # ÂΩì requirements.txt ÂèòÊõ¥Êó∂Ëß¶Âèë
  pull_request:
    branches: [ main, master ]
    paths: [ 'requirements.txt' ]

jobs:
  download-wheels:
    runs-on: ubuntu-22.04-arm  # ‰ΩøÁî® ARM64 Êû∂ÊûÑÁöÑ Ubuntu 22.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
        
    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools
        
    - name: Create wheels directory
      run: mkdir -p wheels
      
    - name: Download ARM64 wheels
      run: |
        # Ê£ÄÊü• requirements.txt ÊòØÂê¶Â≠òÂú®
        if [ ! -f "requirements.txt" ]; then
          echo "‚ùå requirements.txt not found!"
          exit 1
        fi
        
        echo "üì¶ Downloading ARM64 wheels for packages in requirements.txt..."
        
        # ‰∏ãËΩΩÊâÄÊúâ‰æùËµñÂåÖÁöÑ ARM64 wheel Êñá‰ª∂
        pip download \
          --only-binary=:all: \
          --platform linux_aarch64 \
          --platform manylinux_2_28_aarch64 \
          --platform manylinux2014_aarch64 \
          --dest ./wheels \
          -r requirements.txt
        
        echo "‚úÖ Download completed!"
        
    - name: List downloaded wheels
      run: |
        echo "üìã Downloaded wheels:"
        ls -la ./wheels/ || echo "No wheels downloaded"
        
    - name: Create wheels archive
      run: |
        # ÂàõÂª∫Êó∂Èó¥Êà≥Áî®‰∫éÂΩíÊ°£Êñá‰ª∂Âêç
        TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
        
        # ÂàõÂª∫ tar.gz ÂΩíÊ°£
        tar -czf python_arm64_wheels_${TIMESTAMP}.tar.gz -C ./wheels .
        
        # ÂàõÂª∫ zip ÂΩíÊ°£ÔºàÂ§áÁî®Ôºâ
        cd ./wheels && zip -r ../python_arm64_wheels_${TIMESTAMP}.zip . && cd ..
        
        echo "ARCHIVE_NAME=python_arm64_wheels_${TIMESTAMP}" >> $GITHUB_ENV
        
    - name: Upload wheels archive
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ARCHIVE_NAME }}
        path: |
          ${{ env.ARCHIVE_NAME }}.tar.gz
          ${{ env.ARCHIVE_NAME }}.zip
        retention-days: 30
        
    - name: Generate download info
      run: |
        echo "## üì¶ ARM64 Python Wheels Download" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üìã Requirements File Used:" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        cat requirements.txt >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üóÇÔ∏è Downloaded Wheels:" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        ls -1 ./wheels/ | while read file; do
          echo "- $file" >> $GITHUB_STEP_SUMMARY
        done
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ‚¨áÔ∏è Download Links:" >> $GITHUB_STEP_SUMMARY
        echo "- **Tar.gz Archive**: Available in Artifacts section below" >> $GITHUB_STEP_SUMMARY
        echo "- **Zip Archive**: Available in Artifacts section below" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üîß Platform Info:" >> $GITHUB_STEP_SUMMARY
        echo "- **System**: Ubuntu 22.04 ARM64" >> $GITHUB_STEP_SUMMARY
        echo "- **Python**: 3.12" >> $GITHUB_STEP_SUMMARY
        echo "- **Architecture**: aarch64/ARM64" >> $GITHUB_STEP_SUMMARY
        
    - name: Show platform info
      run: |
        echo "üèóÔ∏è Platform Information:"
        uname -a
        arch
        python --version
        pip --version
